@model IEnumerable<BoardofPardons.Entity.AllUser>
@{
    ViewBag.Title = "DisplayAllUserroles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container ">
    <div class="row">
        <div class="col-lg-10 col-lg-offset-1 well">
            @*@Html.ActionLink("Create New Role", "RoleCreate", null, new { @class = "btn btn-primary btn-sm" })  @Html.ActionLink("Add Role to User", "RoleAddToUser", null, new { @class = "btn btn-info btn-sm" })
                @Html.ActionLink("Delete Role to User", "DeleteRoleForUser", null, new { @class = "btn btn-danger btn-sm" })*@
            <div class="form-group text-center">
                <h4 class="form-signin-heading">Manage Users</h4>
            </div>
            <div class="message-success">@ViewBag.ResultMessage</div>
            <table id="myTable" class="table table-striped table-hover ">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>User Name</th>
                        <th>User Email </th>
                        @*<th>User Role </th>*@
                        <th>User Status </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Count() > 0)
                    {
                        int i = 1;

                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@i</td>
                                <td><a class="callUserRole">@item.UserName</a></td>
                                <td>@item.Email</td>
                                <td>@item.Role</td>
                                <td>
                                    @if (item.Status)
                                    {<text> Yes</text> }
                                    else
                                    {<text> False</text> }
                                </td>
                                @if (item.Role != "Administrator")
                                {
                                    if (item.Status)
                                    {
                                        <td>
                                            <a class="btn btn-danger btn-sm" href="@Url.Action("deactivate", "Account", new { id = item.Id })">Deactive</a>
                                        </td>
                                    }
                                    else
                                    {
                                        <td><a class="btn btn-success btn-sm" href="@Url.Action("active", "Account", new { id = item.Id })">Active Now</a></td>
                                    }
                                }
                                else
                                {
                                    <td></td>
                                }


                            </tr>
                                i++;
                        }
                    }

                </tbody>
            </table>
        </div>
        
    </div>
    <div class="row">
        <div class="col-lg-10 col-lg-offset-1 well">
            @Html.ActionLink("Create User", "Create","UserManager", null, new { @class = "btn btn-primary btn-sm pull-right" })
        </div>
    </div>
</div>

<div class="modal" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Update Role</h4>
            </div>
            @using (Html.BeginForm("RoleToUser", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                <div class="modal-body">
                    <div class="col-lg-8 col-lg-offset-2">

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <input type="hidden" name="UserName" id="UserName" value="" />
                        <div class="form-group">
                            <label>Role Name:</label>
                            @*@Html.DropDownList("RoleName", null, new { @class="form-control"})*@
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" id="administrator" name="administrator"> Administrator
                                </label>
                            </div>
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" id="moderator" name="moderator"> Moderator
                                </label>
                            </div>
                        </div>
                        @*<div class="row m-t-10">
                                <div class="col-lg-4 col-sm-4">
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                </div>
                            </div>*@

                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            }
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            $('.callUserRole').click(function () {
                var username = this.innerText;

                $("#administrator").prop("checked", "");
                $("#moderator").prop("checked", "");
                $.ajax({
                    url: 'GetRolesOfUser',
                    type: 'POST',
                    data: { username: username },
                    success: function (returndata) {
                        var UserRoles = returndata.roles;
                        for (var i = 0; i < UserRoles.length; i++) {
                            if (UserRoles[i].RoleName == "administrator") {
                                $("#administrator").prop("checked", "checked");
                            } else if (UserRoles[i].RoleName == "moderator") {
                                $("#moderator").prop("checked", "checked");
                            }
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus, errorThrown);
                    }
                });




                $("#UserName").val(username);
                $('#myModal').modal('show');
            });

            //data-toggle="modal" data-target="#myModal"


            $('#myTable').DataTable({
                "aoColumnDefs": [
                 { 'bSortable': false, 'aTargets': [5] }
                ]
            });
        });
    </script>
}


